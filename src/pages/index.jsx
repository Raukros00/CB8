import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Homepage.module.scss";
import MainLayout from "@/layouts/mainLayout";
import maleTrainer from "../../public/trainers/maleTrainer.webp";
import femaleTrainer from "../../public/trainers/femaleTrainer.webp";
import { useEffect, useState } from "react";
import StatsList from "@/components/statsList";
import Carousel from "@/components/carousel";
import { pokemonColor, capitalize } from "./api/utils";
import { FaPlay } from "react-icons/fa6";
import Link from "next/link";
import Pokemon from "@/components/pokemon";

export default function Home() {
  const [user, setUser] = useState({});
  const [starter, setStarter] = useState({});
  const [stats, setStats] = useState({});
  const [isLoading, setIsLoading] = useState(true);
  const [userCollection, setUserCollection] = useState([]);

  useEffect(() => {
    if (localStorage.getItem("userData")) {
      const userData = JSON.parse(localStorage.getItem("userData"));
      const userCollection = JSON.parse(localStorage.getItem("userCollection"));

      setUser({
        username: userData.username,
        gender: userData.gender,
        trainerPic: userData.gender === "M" ? maleTrainer : femaleTrainer,
      });

      setStarter(userData.starter);

      setUserCollection(userCollection);

      setStats({
        Pokedex: 0,
        Victories: 0,
        "Your Starter": capitalize(userData.starter.name),
        Height: userData.starter.height + " m",
        Weight: userData.starter.weight + " kg",
        Abilities: userData.starter.abilities
          .map((ability) => ability.ability.name)
          .join(", "),
        Types: userData.starter.types.map((type) => type.type.name),
      });

      setIsLoading(false);
    }
  }, []);

  return (
    <>
      <Head>
        <title>Pokemon App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MainLayout>
        {isLoading ? (
          <div class={styles.Loader}>
            <div class="pokemon-loader"></div>
          </div>
        ) : (
          <div className={styles.Homepage}>
            {Object.keys(starter).length !== 0 ? (
              <div className={styles.Container}>
                <h1>
                  Hi{" "}
                  <span
                    style={{ color: pokemonColor(starter.types[0].type.name) }}
                  >
                    {user.username}
                  </span>
                  !
                </h1>
                <div className={styles.UserProfile}>
                  <div className={styles.StarterSection}>
                    <StatsList stats={stats} />

                    <Link
                      href="/starterGame"
                      className={styles.PlayBtn}
                      style={{
                        backgroundColor: pokemonColor(
                          starter.types[0].type.name
                        ),
                      }}
                    >
                      <FaPlay /> Play with {capitalize(starter.name)}
                    </Link>
                    <Image
                      src={starter.sprites.other.home.front_default}
                      className={styles.StarterPic}
                      alt="Trainer pic"
                      width={100}
                      height={100}
                    />
                  </div>
                  <Image
                    src={user.trainerPic}
                    className={styles.TrainerPic}
                    alt="Trainer pic"
                  />
                </div>
                <h4>Your Pok√©mon</h4>
                {userCollection && (
                  <Carousel>
                    {userCollection.map((pokemon, key) => (
                      <Pokemon pokemonData={pokemon} key={key} />
                    ))}
                  </Carousel>
                )}
              </div>
            ) : null}
          </div>
        )}
      </MainLayout>
    </>
  );
}
